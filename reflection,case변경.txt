## 개발 중 해당 파일 에서 읽어오는 데이터를 키값 하드 코딩 없이 VO에 set 하기 위해 찾아봄.

## 호출 하려고 하는 인스턴스를 가져온다
	Object intense = FirstService firstService;


## 인스턴스의 클래스를 추출한다.
	Class<?> firstClass = instance.getClass();

## 선언되어있는 클래스에서 매소드명과 파라미터인 매소드를 가져온다.
	Method method = firstClass.getDeclaredMethod(methodName,parameter);

##해당 매소드를 실행 시킨다.
	Object result = method.invoke(instance,parameter);

#############################################################################################

##실제 사용

String str;

//파일 읽기
BufferedReader reader = new BufferedReader(new FileReader(C:\temp\temp.txt));

//파일을 한줄씩 읽음
while((str = reader.readLine()) != null ){
	if(str.startWith("#")){
		//해당 값을 스네이크케이스 -> 카멜케이스로 변경
		//str의 #을 공백으로 변환
		key = CaseFormat.LOWER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL,str.replaceAll("#",""));
	}else{
		//tempVO의 클래스 안에 있는 key라는 이름,parameter가 String 인 매소드를 찾아서 실행시킨다.
		tempVO.getClass().getDeclareMethod(key,String.class).invoke(tempVO,str);
	}
}
reader.close();
System.out.println(tempVO);

### 출력 내용 ###

testVO [serverType=jenkins,hostIp=10.123.123.123]

### 출력 내용 ###

#############################################################################################

#temp.txt 내용

#server_type
jenkins
#host_ip
10.123.123.123

#############################################################################################

#tempVO

private String serverType;
private String hostIp;

//getter
public String getServerType(){
	return serverType;
}
//setter
public void serverName(String serverType){
	this.serverType = serverType;
}
public String getHostIp(){
	return hostIp;
}
public void hostIp(String hostIp){
	this.hostIp = hostIp;
}