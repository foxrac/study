### db index

##index를 사용하지 않는다면 Full Scan을 한다. (전체조회)

##index를 걸게되면 메모리에 캐시를 저장하여 먼저 확인 한다.

#해당 칼럼에 인덱스를 생성
# CREATE INDEX 인덱스명 ON 테이블명(칼럼명);

#쉽게 해당 칼럼의 내용을 메모리에 올려 조회시 먼저 확인을 하여 맞는 부분으로 찾아가기 때문에 빠름

#장점
테이블을 조회하는 속도와 그에 따른 성능을 향상시킬 수 있다.
#단점
인덱스를 관리하기 위해 DB의 약 10%에 해당하는 저장공간이 필요하다.
인덱스를 관리하기 위해 추가 작업이 필요하다.
인덱스를 잘못 사용할 경우 오히려 성능이 저하되는 역효과가 발생할 수 있다.

만약 CREATE, DELETE, UPDATE가 빈번한 속성에 인덱스를 걸게 되면 인덱스의 크기가 비대해져서 성능이 오히려 저하되는 역효과가 발생할 수 있다. 그러한 이유 중 하나는 DELETE와 UPDATE 연산 때문이다. 앞에서 설명한대로, UPDATE와 DELETE는 기존의 인덱스를 삭제하지 않고 '사용하지 않음' 처리를 해준다고 하였다. 만약 어떤 테이블에 UPDATE와 DELETE가 빈번하게 발생된다면 실제 데이터는 10만건이지만 인덱스는 100만 건이 넘어가게 되어, SQL문 처리 시 비대해진 인덱스에 의해 오히려 성능이 떨어지게 될 것이다. 

[ 인덱스(index)를 사용하면 좋은 경우 ]
규모가 작지 않은 테이블
INSERT, UPDATE, DELETE가 자주 발생하지 않는 컬럼
JOIN이나 WHERE 또는 ORDER BY에 자주 사용되는 컬럼
데이터의 중복도가 낮은 컬럼
기타 등등




참고 : https://mangkyu.tistory.com/96
https://tecoble.techcourse.co.kr/post/2021-09-18-db-index/